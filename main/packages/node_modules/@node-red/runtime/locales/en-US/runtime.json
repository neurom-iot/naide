{
    "runtime": {
        "welcome": "Welcome to NAIDE",
        "version": "__component__ version: __version__",
        "unsupported_version": "Unsupported version of __component__. Requires: __requires__ Found: __version__",
        "paths": {
            "settings": "Settings file  : __path__",
            "httpStatic": "HTTP Static    : __path__"
        }
    },

    "server": {
        "loading": "Loading palette components",
        "palette-editor": {
            "disabled": "Palette editor disabled : user settings",
            "npm-not-found": "Palette editor disabled : npm command not found",
            "npm-too-old": "Palette editor disabled : npm version too old. Requires npm >= 3.x"
        },
        "errors": "Failed to register __count__ component type",
        "errors_plural": "Failed to register __count__ component types",
        "errors-help": "Run with -v for details",
        "missing-modules": "Missing component modules:",
        "node-version-mismatch": "Node module cannot be loaded on this version. Requires: __version__ ",
        "type-already-registered": "'__type__' already registered by module __module__",
        "removing-modules": "Removing modules from config",
        "added-types": "Added component types:",
        "removed-types": "Removed component types:",
        "install": {
            "invalid": "Invalid module name",
            "installing": "Installing module: __name__, version: __version__",
            "installed": "Installed module: __name__",
            "install-failed": "Install failed",
            "install-failed-long": "Installation of module __name__ failed:",
            "install-failed-not-found": "$t(server.install.install-failed-long) module not found",
            "upgrading": "Upgrading module: __name__ to version: __version__",
            "upgraded": "Upgraded module: __name__. Restart NAIDE to use the new version",
            "upgrade-failed-not-found": "$t(server.install.install-failed-long) version not found",
            "uninstalling": "Uninstalling module: __name__",
            "uninstall-failed": "Uninstall failed",
            "uninstall-failed-long": "Uninstall of module __name__ failed:",
            "uninstalled": "Uninstalled module: __name__"
        },
        "unable-to-listen": "Unable to listen on __listenpath__",
        "port-in-use": "Error: port in use",
        "uncaught-exception": "Uncaught Exception:",
        "admin-ui-disabled": "Admin UI disabled",
        "now-running": "Server now running at __listenpath__",
        "failed-to-start": "Failed to start server:",
        "headless-mode": "Running in headless mode",
        "httpadminauth-deprecated": "use of httpAdminAuth is deprecated. Use adminAuth instead"
    },

    "api": {
        "flows": {
            "error-save": "Error saving flows: __message__",
            "error-reload": "Error reloading flows: __message__"
        },
        "library": {
            "error-load-entry": "Error loading library entry '__path__': __message__",
            "error-save-entry": "Error saving library entry '__path__': __message__",
            "error-load-flow": "Error loading flow '__path__': __message__",
            "error-save-flow": "Error saving flow '__path__': __message__"
        },
        "nodes": {
            "enabled": "Enabled component types:",
            "disabled": "Disabled component types:",
            "error-enable": "Failed to enable component:"
        }
    },

    "comms": {
        "error": "Communication channel error: __message__",
        "error-server": "Communication server error: __message__",
        "error-send": "Communication send error: __message__"
    },

    "settings": {
        "user-not-available": "Cannot save user settings: __message__",
        "not-available": "Settings not available",
        "property-read-only": "Property '__prop__' is read-only"
    },

    "nodes": {
        "credentials": {
            "error":"Error loading credentials: __message__",
            "error-saving":"Error saving credentials: __message__",
            "not-registered": "Credential type '__type__' is not registered",
            "system-key-warning": "\n\n---------------------------------------------------------------------\nYour flow credentials file is encrypted using a system-generated key.\n\nIf the system-generated key is lost for any reason, your credentials\nfile will not be recoverable, you will have to delete it and re-enter\nyour credentials.\n\nYou should set your own key using the 'credentialSecret' option in\nyour settings file. NAIDE will then re-encrypt your credentials\nfile using your chosen key the next time you deploy a change.\n---------------------------------------------------------------------\n"
        },
        "flows": {
            "safe-mode": "Flows stopped in safe mode. Deploy to start.",
            "registered-missing": "Missing type registered: __type__",
            "error": "Error loading flows: __message__",
            "starting-modified-nodes": "Starting modified components",
            "starting-modified-flows": "Starting modified flows",
            "starting-flows": "Starting flows",
            "started-modified-nodes": "Started modified components",
            "started-modified-flows": "Started modified flows",
            "started-flows": "Started flows",
            "stopping-modified-nodes": "Stopping modified components",
            "stopping-modified-flows": "Stopping modified flows",
            "stopping-flows": "Stopping flows",
            "stopped-modified-nodes": "Stopped modified components",
            "stopped-modified-flows": "Stopped modified flows",
            "stopped-flows": "Stopped flows",
            "stopped": "Stopped",
            "stopping-error": "Error stopping component: __message__",
            "added-flow": "Adding flow: __label__",
            "updated-flow": "Updated flow: __label__",
            "removed-flow": "Removed flow: __label__",
            "missing-types": "Waiting for missing types to be registered:",
            "missing-type-provided": " - __type__ (provided by npm module __module__)",
            "missing-type-install-1": "To install any of these missing modules, run:",
            "missing-type-install-2": "in the directory:"
        },
        "flow": {
            "unknown-type": "Unknown type: __type__",
            "missing-types": "missing types",
            "error-loop": "Message exceeded maximum number of catches"
        },
        "index": {
            "unrecognised-id": "Unrecognised id: __id__",
            "type-in-use": "Type in use: __msg__",
            "unrecognised-module": "Unrecognised module: __module__"
        },
        "registry": {
            "localfilesystem": {
                "module-not-found": "Cannot find module '__module__'"
            }
        }
    },

    "storage": {
        "index": {
            "forbidden-flow-name": "forbidden flow name"
        },
        "localfilesystem": {
            "user-dir": "User directory : __path__",
            "flows-file": "Flows file     : __path__",
            "create": "Creating new __type__ file",
            "empty": "Existing __type__ file is empty",
            "invalid": "Existing __type__ file is not valid json",
            "restore": "Restoring __type__ file backup : __path__",
            "restore-fail": "Restoring __type__ file backup failed : __message__",
            "fsync-fail": "Flushing file __path__ to disk failed : __message__",
            "projects": {
                "changing-project": "Setting active project : __project__",
                "active-project": "Active project : __project__",
                "project-not-found": "Project not found : __project__",
                "no-active-project": "No active project : using default flows file",
                "disabled": "Projects disabled : editorTheme.projects.enabled=false",
                "disabledNoFlag": "Projects disabled : set editorTheme.projects.enabled=true to enable",
                "git-not-found": "Projects disabled : git command not found",
                "git-version-old": "Projects disabled : git __version__ not supported. Requires 2.x",
                "summary": "A NAIDE Project",
                "readme": "### About\n\nThis is your project's README.md file. It helps users understand what your\nproject does, how to use it and anything else they may need to know."
            }
        }
    },

    "context": {
        "log-store-init": "Context store  : '__name__' [__info__]",
        "error-loading-module": "Error loading context store: __message__",
        "error-loading-module2": "Error loading context store '__module__': __message__",
        "error-module-not-defined": "Context store '__storage__' missing 'module' option",
        "error-invalid-module-name": "Invalid context store name: '__name__'",
        "error-invalid-default-module": "Default context store unknown: '__storage__'",
        "unknown-store": "Unknown context store '__name__' specified. Using default store.",
        "localfilesystem": {
            "error-circular": "Context __scope__ contains a circular reference that cannot be persisted",
            "error-write": "Error writing context: __message__"
        }
    }

}
