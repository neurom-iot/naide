{% extends "templates/remote.sh.template" %}

{% block remote_install %}
{{ super() }}
        pip install git+https://github.com/nengo/nengo-bones#egg=nengo-bones
        bones-generate --output-dir .ci ci-scripts || REMOTE_STATUS=1
        bash .ci/{{ remote_script }}.sh install || REMOTE_STATUS=1

        FPGA_CONFIG="\$HOME/fpga_config"

        # A valid fpga_config should be in the $HOME dir of the remote machine
        if [ ! -f "\$FPGA_CONFIG" ]; then
          echo "ERROR: There must be a valid fpga_config file in \$HOME"
          exit 1
        fi

        cp -f "\$FPGA_CONFIG" ~/"$BUILD_DIR"/{{ pkg }}

{% endblock %}

{% block remote_script %}
{{ super() }}
        export TRAVIS_JOB_NUMBER="$TRAVIS_JOB_NUMBER"
        export TRAVIS_BRANCH="$TRAVIS_BRANCH"
        export TRAVIS_TAG="$TRAVIS_TAG"
        export TEST_ARGS="$TEST_ARGS"

        bash .ci/{{ remote_script }}.sh script || REMOTE_STATUS=1
{% endblock %}

{% block after_script %}
    {% if remote_script == "docs" %}
    REMOTE_FAILED_FILE="tmp/nengo-fpga-$TRAVIS_JOB_NUMBER/{{ pkg }}/$TRAVIS_JOB_NUMBER.failed"
    ssh -q {{ host }} [[ -e "$REMOTE_FAILED_FILE" ]] && exe scp {{ host }}:"$REMOTE_FAILED_FILE" .
    exe rsync -azh "{{ host }}:./tmp/{{ pkg }}-$TRAVIS_JOB_NUMBER/{{ pkg }}-docs" ..
    {% endif %}
    exe bash .ci/{{ remote_script }}.sh after_script
{{ super() }}
{% endblock %}
